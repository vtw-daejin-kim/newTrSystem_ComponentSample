<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trsystem.mybatis.mapper.humanResourceMngMapper">

    <!--==================1.부서 관리==================-->
    <!--부서 목록 조회-->
  	<select id="retrieveDeptList" parameterType="map" resultType="com.trsystem.LowerHashMap">
	    SELECT
	          ROW_NUMBER()OVER ()ROWNUM
	        , DEPT_ID
	        , DEPT_NM                                                                                   -- 부서명
	        , UP_DEPT_ID
	        , (SELECT d2.DEPT_NM FROM DEPT d2 WHERE d.UP_DEPT_ID = d2.DEPT_ID) AS UP_DEPT_NM            -- 상위부서명
	        , (SELECT EMP_FLNM
				FROM (SELECT e.EMP_FLNM
					         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					    FROM EMP e
					    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					    WHERE h.DEPT_ID = d.DEPT_ID) a
				WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM                                                     -- 부서장명
	        , DEPT_BGNG_YMD                                                                             -- 부서시작일자
	        , DEPT_END_YMD                                                                              -- 부서종료일자
	        , COUNT(*) OVER () AS TOTAL_ITEMS                                                           -- 총건수
	     FROM DEPT d
	     WHERE 1=1
	    <if test="deptId!= null and !deptId.equals('')">
			AND DEPT_ID LIKE CONCAT('%',#{deptId},'%')
		</if> 
		<if test="deptNm!= null and !deptNm.equals('')">
			AND DEPT_NM LIKE CONCAT('%',#{deptNm},'%')
		</if>
        <if test="deptMngrEmpFlnm!= null and !deptMngrEmpFlnm.equals('')">
			AND (SELECT EMP_FLNM
		           FROM (SELECT e.EMP_FLNM
		                         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
		                    FROM EMP e
		                    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
		                    WHERE h.DEPT_ID = d.DEPT_ID) a
		            WHERE RN = 1
		        ) LIKE CONCAT('%',#{deptMngrEmpFlnm},'%')
		</if>
        <if test="deptBgngYmd != null and bizEndYmd == null">
			AND DEPT_BGNG_YMD > #{deptBgngYmd}
		</if>
        <if test="deptBgngYmd == null and deptEndYmd != null">
			AND DEPT_END_YMD > #{deptEndYmd}
		</if>
        <if test="deptBgngYmd != null and deptEndYmd != null">
			<if test="!deptBgngYmd.equals('') and !deptEndYmd.equals('')">
				AND DEPT_BGNG_YMD BETWEEN #{deptBgngYmd} AND #{deptEndYmd}
			</if>
		</if>
		ORDER BY REG_DT DESC </select>
	   <!--트리구조 부서조회 임시-->
	   <select id="retrieveDeptList2" parameterType="map" resultType="com.trsystem.LowerHashMap">
		WITH RECURSIVE DEPT_PATH(DEPT_ID,DEPT_NM,UP_DEPT_ID,DEPT_MNGR_EMP_FLNM,DEPT_BGNG_YMD,DEPT_END_YMD,DEPTH)  AS (
		    SELECT 
		    	DEPT_ID
		     	,DEPT_NM 
		     	,UP_DEPT_ID
		     	,(SELECT a.EMP_FLNM
					FROM (SELECT e.EMP_FLNM
					         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					    FROM EMP e
					    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					    WHERE h.DEPT_ID = aa.DEPT_ID) a
				WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM     
		     	,DEPT_BGNG_YMD
		     	,DEPT_END_YMD
		     	,1
		    FROM 
		    	DEPT aa
		    WHERE aa.UP_DEPT_ID IS NULL
		 
		    UNION ALL
		 
		    SELECT 
		    	d.DEPT_ID 
		    	,d.DEPT_NM 
		    	,d.UP_DEPT_ID
		    	,(SELECT a.EMP_FLNM
				FROM (SELECT e.EMP_FLNM
					         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					    FROM EMP e
					    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					    WHERE h.DEPT_ID = d.DEPT_ID) a
				WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM     
		    	,d.DEPT_BGNG_YMD
		    	,d.DEPT_END_YMD 
		    	,dp.DEPTH+1
		    FROM DEPT d
		    INNER JOIN DEPT_PATH dp ON d.UP_DEPT_ID =dp.DEPT_ID
		)
		SELECT 
			DEPT_ID,
			DEPT_NM ,
			UP_DEPT_ID,
			DEPT_MNGR_EMP_FLNM,
			DEPT_BGNG_YMD,
			DEPT_END_YMD, 
			COUNT(*) OVER () AS TOTAL_ITEMS       
		FROM 
			DEPT_PATH;
		
		</select>
		
	   <!--부서 상세 조회-->
  	   <select id="getDeptDetail" parameterType="map" resultType="com.trsystem.LowerHashMap">
	   SELECT d.DEPT_ID
	        , d.DEPT_NM                                                                                   -- 부서명
	        , (SELECT d2.DEPT_NM FROM DEPT d2 WHERE d.UP_DEPT_ID = d2.DEPT_ID) AS UP_DEPT_NM              -- 상위부서명
	        , (SELECT a.EMP_FLNM
				FROM (SELECT e.EMP_FLNM
					         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					    FROM EMP e
					    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					    WHERE h.DEPT_ID = d.DEPT_ID) a
				WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM                                                       -- 부서장명
	        , d.DEPT_BGNG_YMD                                                                             -- 부서시작일자
	        , d.DEPT_END_YMD                                                                              -- 부서종료일자
	     FROM DEPT d
	     WHERE 1=1
	       AND d.DEPT_ID = #{deptId}
		</select>


		<!--부서 하위부서 조회-->
		<select id="retrieveDownDeptList" parameterType="map" resultType="com.trsystem.LowerHashMap">
			SELECT d.DEPT_ID
                 , d.DEPT_NM
                 , (SELECT EMP_FLNM
				      FROM (SELECT e.EMP_FLNM
					             , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					          FROM EMP e
					         INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					         WHERE h.DEPT_ID = d.DEPT_ID) a
				      WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM
              FROM DEPT d
             WHERE d.UP_DEPT_ID = #{deptId}
		</select>


		<select id="retrieveDeptHnfList" parameterType="map" resultType="com.trsystem.LowerHashMap">
			SELECT e.EMP_ID
			       , e.EMPNO
			       , e.EMP_FLNM
			       , ( SELECT c.CD_NM
			             FROM CD c
                        WHERE c.CD_VALUE = e.JBPS_CD) AS JBPS_NM                                          -- 직위
                   , e.JBPS_CD     
                   , ( SELECT c.CD_NM
			             FROM CD c
                        WHERE c.CD_VALUE = h.JBTTL_CD) AS JBTTL_NM                                        -- 직책
                   , h.JBTTL_CD     
		      FROM EMP e
		     INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
		     WHERE h.DEPT_ID = #{deptId}
		     ORDER BY h.JBTTL_CD 
		</select>


	<!-- 휴가사용내역 -->
	<select id="retrieveEmpVacUseList" parameterType="map" resultType="com.trsystem.LowerHashMap">
    SELECT
		 (SELECT CD_NM FROM CD WHERE CD_VALUE = va.VCATN_TY_CD) AS VCATN_TY_CD -- 휴가구분
 		,(SELECT EMPNO FROM  EMP WHERE EMP_ID IN (SELECT ATRZ_DMND_EMP_ID  FROM ELCTRN_ATRZ ea WHERE ea.ELCTRN_ATRZ_ID = va.ELCTRN_ATRZ_ID ) ) as EMPNO -- 사원번호
 		,(SELECT EMP_FLNM FROM EMP WHERE EMP_ID IN (SELECT ATRZ_DMND_EMP_ID  FROM ELCTRN_ATRZ ea WHERE ea.ELCTRN_ATRZ_ID = va.ELCTRN_ATRZ_ID  ) ) as EMP_FLNM -- 사원명
		, STR_TO_DATE(VCATN_BGNG_YMD, '%Y%m%d')  VCATN_BGNG_YMD -- 시작일
		, STR_TO_DATE(VCATN_END_YMD, '%Y%m%d')  VCATN_END_YMD -- 종료일
		, VCATN_DE_CNT -- 휴가일수
		, VCATN_PRVONSH -- 휴가사유
        , COUNT(*) OVER () AS TOTAL_ITEMS
     FROM
     VCATN_ATRZ va     	   <!--휴가결재 테이블-->
 	 WHERE 1=1
        <if test="vcatnBgngYmd != null and vcatnEndYmd == null">
      		AND VCATN_BGNG_YMD <![CDATA[>=]]> #{vcatnBgngYmd}
        </if>
        <if test="vcatnBgngYmd == null and vcatnEndYmd != null">
      		AND VCATN_END_YMD <![CDATA[<=]]> #{vcatnEndYmd}
        </if>
        <if test="vcatnBgngYmd != null and vcatnEndYmd != null">
           <if test="!vcatnBgngYmd.equals('') and !vcatnEndYmd.equals('')">
     		AND VCATN_BGNG_YMD BETWEEN #{vcatnBgngYmd} AND #{vcatnEndYmd}
           </if>
        </if>
      <if test="empno !=null and !empno.equals('')">
     	HAVING
        EMPNO = #{empno}
      </if>
    </select>


	<!--사번max값 조회용 쿼리-->
	<select id="retrieveEmpnoMax" parameterType="map" resultType="com.trsystem.LowerHashMap">
	SELECT
		CONCAT(#{empnoChk},LPAD(MAX(substr(empno, 3))+1, '4', '0')) as  EMPNO_CHK
	FROM
		EMP
	WHERE
		EMPNO LIKE CONCAT(#{empnoChk},'%');
	</select>



	<!-- 박지환 작업 -->
	<!--휴가배정정보조회-->
	<select id="retrieveEmpVcatnInfo" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT *
		FROM (
			SELECT
				EMP.EMP_ID 							/* 사원ID */
				,EMP.EMPNO 							/* 사원번호 */
				,EMP.EMP_FLNM 						/* 사원명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)			JOB_CD 			/* 직급코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)				JOB_NM 			/* 직급명 */
				,DEPT.DEPT_ID 						/* 부서ID */
				,DEPT.DEPT_NM 						/* 부서명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_CD 	/* 재직상태코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_NM 	/* 재직상태명 */
				,VMNG.VCATN_ALTMNT_SN 				/* 휴가배정순번 */
				,VMNG.VCATN_YR 				 		/* 휴가연도 */
				,VMNG.VCATN_ALTMNT_DAYCNT			/* 휴가배정일수 */
				,VMNG.USE_DAYCNT					/* 사용일수 */
				,VMNG.VCATN_REMNDR_DAYCNT			/* 휴가잔여일수 */
				,VMNG.NEW_VCATN_ALTMNT_DAYCNT		/* 신규휴가배정일수 */
				,VMNG.NEW_USE_DAYCNT				/* 신규사용일수 */
				,VMNG.NEW_REMNDR_DAYCNT				/* 신규잔여일수 */
				,VMNG.ALTMNT_BGNG_YMD				/* 배정시작일자 */
				,VMNG.ALTMNT_USE_END_YMD			/* 배정사용종료일자 */
				,CASE WHEN DATEDIFF(DATE_FORMAT(NOW(), '%Y%m%d'), DATE_FORMAT(CONCAT(DATE_FORMAT(NOW(), '%Y'), '0401'), '%Y%m%d')) <![CDATA[<]]> 0 THEN DATE_FORMAT(NOW(), '%Y') - 1
				ELSE DATE_FORMAT(NOW(), '%Y')
				END FLAG_YEAR						/* 회계년도 */
			FROM VCATN_MNG	VMNG
			RIGHT JOIN EMP EMP ON EMP.EMP_ID = VMNG.EMP_ID
			LEFT JOIN DEPT_HNF HNF ON HNF.EMPNO = EMP.EMPNO
			LEFT JOIN DEPT DEPT ON DEPT.DEPT_ID = HNF.DEPT_ID
		) A
		WHERE 1 = 1
		<if test="vcatnYr == null or vcatnYr.equals('')">
			AND VCATN_YR = FLAG_YEAR
		</if>
		<if test="vcatnYr != null and !vcatnYr.equals('')">
			AND VCATN_YR = #{vcatnYr}
		</if>
		<if test="empno != null and !empno.equals('')">
			AND EMPNO LIKE CONCAT('%', #{empno}, '%')
		</if>
		<if test="empFlnm != null and !empFlnm.equals('')">
			AND EMP_FLNM LIKE CONCAT('%', #{empFlnm}, '%')
		</if>
		<if test="jobCd != null and !jobCd.equals('')">
			AND JOB_CD  = #{jobCd}
		</if>
		<if test="deptCd != null and !deptCd.equals('')">
			AND DEPT_ID = #{deptCd}
		</if>
		<if test="hdofSttsCd != null and !hdofSttsCd.equals('')">
			AND HDOF_STTS_CD = #{hdofSttsCd}
		</if>
		ORDER BY EMPNO
	</select>

	<!-- 휴가배정정보저장 -->
	<insert id="insertVcatnMng" parameterType="map">
		INSERT INTO VCATN_MNG
			SELECT
				CASE
					WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NOT NULL
						THEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr})
					WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NULL
						THEN CASE
							WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NOT NULL
								THEN (SELECT MAX(VCATN_ALTMNT_SN) + 1 FROM VCATN_MNG WHERE EMP_ID = #{empId})
							WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NULL
								THEN 1
							END
				END VCATN_ALTMNT_SN  		/* 휴가배정순번 */
				,#{empId}					/* 직원ID */
				,#{vcatnYr}					/* 휴가연도 */
				,#{vcatnAltmntDaycnt}		/* 휴가배정일수 */
				,0							/* 사용일수 */
				,0							/* 공적휴가사용일수 */
				,#{vcatnAltmntDaycnt}		/* 휴가잔여일수 */
				,#{newVcatnAltmntDaycnt}	/* 신규휴가배정일수 */
				,0							/* 신규사용일수 */
				,#{newRemndrDaycnt}			/* 신규잔여일수 */
				,#{altmntBgngYmd}			/* 배정시작일자 */
				,#{altmntUseEndYmd}			/* 배정사용종료일자 */
				,SYSDATE()					/* 등록일시 */
				,#{regEmpId}				/* 등록지원ID */
				,SYSDATE()					/* 수정일시 */
				,#{mdfcnEmpId}				/* 수정직원ID */
				,#{newAltmntDdlnYr}			/* 신규배정마감연도 */
		ON DUPLICATE KEY UPDATE
			VCATN_YR 					= #{vcatnYr}
			,VCATN_ALTMNT_DAYCNT		= #{vcatnAltmntDaycnt}
			,VCATN_REMNDR_DAYCNT 		= #{vcatnRemndrDaycnt}
			,NEW_VCATN_ALTMNT_DAYCNT	= #{newVcatnAltmntDaycnt}
			,NEW_REMNDR_DAYCNT 			= #{newRemndrDaycnt}
			,ALTMNT_BGNG_YMD			= #{altmntBgngYmd}
			,ALTMNT_USE_END_YMD			= #{altmntUseEndYmd}
	</insert>

	<!-- 월별휴가정보조회 -->
	<select id="retrieveMnbyVcatnInfo" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID 						/* 사원ID */
			,EMP.EMPNO						/* 사원번호 */
			,CONCAT(EMP.EMP_FLNM, '(', CD.CD_NM, ')') TITLE		/* 휴가명 */
			,CD.CD_NM						/* 휴가종류코드 */
			,VCATN.VCATN_BGNG_YMD DATE		/* 휴가시작일자 */
			,VCATN_END_YMD					/* 휴가종료일자 */
			,SUBSTR(VCATN.VCATN_BGNG_YMD, 5, 2)	VCATN_MONTH		/* 휴가월 */
			,VCATN.VCATN_DE_CNT				/* 휴가사용일수 */
			,VCATN.ELCTRN_ATRZ_ID			/* 전자결재ID */
		FROM
			VCATN_ATRZ		VCATN			/* 휴가결재 */
			,ELCTRN_ATRZ	ELCTRN			/* 전자결재 */
			,EMP			EMP				/* 직원 */
			,CD 			CD				/* 코드 */
		WHERE VCATN.ELCTRN_ATRZ_ID = ELCTRN.ELCTRN_ATRZ_ID
		AND	EMP.EMP_ID = ATRZ_DMND_EMP_ID
		AND VCATN.VCATN_TY_CD = CD.CD_VALUE
		<if test="searchYear !=null and !searchYear.equals('')">
			AND SUBSTR(VCATN_BGNG_YMD, 1, 4) = #{searchYear}
		</if>
		<if test="searchMonth !=null and !searchMonth.equals('')">
			AND SUBSTR(VCATN_BGNG_YMD, 5, 2) = #{searchMonth}
		</if>
		<if test="empId !=null and !empId.equals('')">
			AND EMP_ID = #{empId}
		</if>
	</select>

	<!-- 회의실예약정보조회 -->
	<select id="retrieveMtgRoomInfoInq" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID 							/* 사원ID */
			,EMP.EMPNO 							/* 사원번호 */
			,EMP.EMP_FLNM	RSVT_EMP_FLNM		/* 예약자성명 */
			,RSVT.MTG_ROOM_RSVT_SN 				/* 회의실순번 */
			,RSVT.MTG_ROOM_CD 					/* 회의실코드 */
			,(SELECT CD_NM FROM CD WHERE RSVT.MTG_ROOM_CD = CD.CD_VALUE)	MTG_ROOM_NM	/* 회의실명 */
			,RSVT.RSVT_EMP_ID					/* 예약직원ID */
			,RSVT.USE_YMD 						/* 사용일자 */
			,RSVT.USE_BGNG_HM  					/* 사용시작시분 */
			,RSVT.USE_END_HM 					/* 사용종료시분 */
			,RSVT.MTG_TTL 						/* 회의내용 */
			,STR_TO_DATE(CONCAT(USE_YMD, USE_BGNG_HM), '%Y%m%d%H%i%s')  START_DATE	/* 사용시작일자 */
			,STR_TO_DATE(CONCAT(USE_YMD, USE_END_HM), '%Y%m%d%H%i%s')   END_DATE	/* 사용종료일자 */
			FROM
		MTG_ROOM_RSVT		RSVT
			,EMP			EMP
		WHERE RSVT.RSVT_EMP_ID = EMP.EMP_ID
		AND EXISTS (
			SELECT 1
			FROM MTG_ROOM_RSVT_ATDRN    ATDRN
			WHERE RSVT.MTG_ROOM_RSVT_SN = ATDRN.MTG_ROOM_RSVT_SN
		)
		<if test="changeDate !=null and !changeDate.equals('')">
			AND (RSVT.USE_YMD BETWEEN #{changeDate} - 7 AND #{changeDate} + 7)
		</if>
	</select>

	<!-- 회의참석자조회 -->
	<select id="retrieveMtgAtdrnInq" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID 					/* 사원ID */
			,EMP.EMPNO 					/* 사원번호 */
			,EMP.EMP_FLNM 				/* 사원명 */
			,CONCAT(
				(SELECT DEPT_NM
					FROM DEPT DEPT
						,DEPT_HNF HNF
					WHERE EMP.EMP_ID = HNF.EMP_ID
					AND DEPT.DEPT_ID = HNF.DEPT_ID), ' ', EMP_FLNM, ' ', (SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD)) LIST_EMP_FLNM 	/* 사원명 */
			,RSVT.USE_YMD 				/* 사용일자 */
			,ATDRN.MTG_ATDRN_SN			/* 회의참석자일련번호 */
			,ATDRN.MTG_ROOM_RSVT_SN		/* 회의실예약순번 */
			,RSVT.MTG_ROOM_CD			/* 회의실코드 */
			,(SELECT CD_NM FROM CD WHERE CD_VALUE = RSVT.MTG_ROOM_CD)	/* 회의실명 */
		FROM MTG_ROOM_RSVT			RSVT
			,MTG_ROOM_RSVT_ATDRN	ATDRN
			,EMP 					EMP
		WHERE RSVT.MTG_ROOM_RSVT_SN = ATDRN.MTG_ROOM_RSVT_SN
		AND ATDRN.ATND_EMP_ID = EMP.EMP_ID
		<if test="changeDate !=null and !changeDate.equals('')">
			AND (RSVT.USE_YMD BETWEEN #{changeDate} - 7 AND #{changeDate} + 7)
		</if>
	</select>



	<!-- 코드조회 -->
	<select id="retrieveCodeList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			CD_VALUE
			,CD_NM
			,UP_CD_VALUE
		FROM CD
		WHERE UP_CD_VALUE = #{upCdValue}
<!--		WHERE UP_CD_VALUE IN-->
<!--		<foreach collection="empNoList" item="code" index="index" separator="," open="(" close=")">-->
<!--			#{upCdValue}-->
<!--		</foreach>-->
		AND USE_YN = 'Y'
	</select>


	<!-- 직원목록조회 -->
	<select id="retrieveEmpList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID
			,EMP.EMPNO
			,EMP_FLNM
			,JBPS_CD
			,(SELECT CD_NM FROM CD WHERE CD_VALUE = JBPS_CD)	JBPS_NM
			,DEPT.DEPT_ID
			,DEPT.DEPT_NM
			,CONCAT(DEPT_NM, ' ', EMP_FLNM, ' ', (SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD)) LIST_EMP_FLNM
		FROM
			EMP			EMP
			,DEPT 		DEPT
			,DEPT_HNF	HNF
		WHERE HDOF_STTS_CD = 'VTW00301'
		AND EMP.EMP_ID = HNF.EMP_ID
		AND DEPT.DEPT_ID = HNF.DEPT_ID
	</select>

	
</mapper>	
